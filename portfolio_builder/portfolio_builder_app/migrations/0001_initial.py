# Generated by Django 4.1.3 on 2022-11-30 08:20

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('role', models.PositiveSmallIntegerField(choices=[('admin', 1), ('user', 2)], default=('user', 2))),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Person',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='award',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='title', max_length=100)),
                ('date', models.DateField(default=datetime.date(2000, 1, 1))),
                ('recognition_level', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'Awards',
            },
        ),
        migrations.CreateModel(
            name='Biography',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(default='description', max_length=255)),
                ('email', models.EmailField(default='email', max_length=150)),
                ('personal_website', models.URLField()),
            ],
            options={
                'db_table': 'Biography',
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(default='name', max_length=100)),
                ('occupation', models.CharField(default='occupation', max_length=100)),
                ('career_summary', models.CharField(default='career_summary', max_length=255)),
                ('philosophy_statement', models.CharField(blank=True, max_length=200, null=True)),
                ('bio', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='portfolio_builder_app.biography')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Portfolio',
            },
        ),
        migrations.CreateModel(
            name='social_media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('socialMedia_name', models.CharField(default='linkedin', max_length=100)),
                ('socialMedia_link', models.URLField()),
                ('socialMedia_bio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio_builder_app.biography')),
            ],
            options={
                'db_table': 'SocialMedia',
            },
        ),
        migrations.CreateModel(
            name='reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='title', max_length=100)),
                ('job_title', models.CharField(default='jobtitle', max_length=100)),
                ('email', models.EmailField(default='email', max_length=150)),
                ('phone_number', models.PositiveIntegerField(default=11111111)),
                ('reference_portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio_builder_app.portfolio')),
            ],
            options={
                'db_table': 'References',
            },
        ),
        migrations.CreateModel(
            name='professional_accomplishment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='accomplishment_name', max_length=100)),
                ('category', models.CharField(default='accomplishment_category', max_length=100)),
                ('accomplishment_portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio_builder_app.portfolio')),
            ],
            options={
                'db_table': 'Professional_accomplishments',
            },
        ),
        migrations.CreateModel(
            name='justification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='jutification_name', max_length=100)),
                ('photo', models.ImageField(blank=True, max_length=200, null=True, upload_to='photos/justification')),
                ('file', models.FileField(max_length=254, upload_to='files/justification')),
                ('accomplishment_justification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio_builder_app.professional_accomplishment')),
                ('award_justification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio_builder_app.award')),
            ],
            options={
                'db_table': 'Justifications',
            },
        ),
        migrations.CreateModel(
            name='community_service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='name', max_length=100)),
                ('description', models.CharField(default='description', max_length=255)),
                ('service_portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio_builder_app.portfolio')),
            ],
            options={
                'db_table': 'Community_services',
            },
        ),
        migrations.CreateModel(
            name='certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='title', max_length=100)),
                ('description', models.CharField(default='description', max_length=255)),
                ('document_link', models.URLField()),
                ('certification_portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio_builder_app.portfolio')),
            ],
            options={
                'db_table': 'Certifications',
            },
        ),
        migrations.AddField(
            model_name='award',
            name='award_portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio_builder_app.portfolio'),
        ),
    ]
